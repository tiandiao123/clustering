install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
mean(c(1,2,5,6))
mean(c(1,2,3,6))
mean(c(2,3,5))
install.packages("RMySQL")
install.packages("XML")
?unlist
x<-c(1,2,3)
x
unlist(c)
x
x
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
unlist(emp.data)
emp.data
?xPathApply
?xpathApply
??xpathApply
library(XML)
?xpathApply
getwd()
?attach
tables=readHTMLTable("http://biostat.jhsph.edu/~jleek/contact.html")
head(tables)
?nchar
nchar(tables[10,])
tables
tables<-readHTMLTable("http://biostat.jhsph.edu/~jleek/contact.html")
head(tables)
table_1<-readHTMLTable("http://biostat.jhsph.edu/~jleek/contact.html")
nchar(table_1[10,])
str(table_1)
?readHTMLTable
data<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data<-readHTMLTable("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
url1<-"http://biostat.jhsph.edu/~jleek/contact.html"
html<-htmlTreeParse(url,useInternalNodes = T)
html<-htmlTreeParse(url1,useInternalNodes = T)
nchar(html[10,])
head(html)
?xpathSApply
con<-url("http://biostat.jhsph.edu/~jleek/contact.html")
con1=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcodes=readLines(con1)
nchar(htmlcodes[10,])
htmlcodes
nchar(htmlcodes[10])
nchar(htmlcodes[20])
nchar(htmlcodes[30])
nchar(htmlcodes[100])
data2=readHTMLTable("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
install.packages("RCurl")
library(RCurl)
myfile<-getURL('https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for')
class(myfile)
mydat<-read.csv(textConnection(myfile),header = T)
head(mydat)
sum(mydat[,4])
head(mydat[,4])
head(mydat$Nino34)
nrow(mydat)
1256*26
?xtabs
?rep
rep(1)
rep(1:9,len=54)
rep(1:9,len=54)
rep(1:9,each=3)
rep(1:9,times=3)
install.packages("Hmisc")
sample(10)
?relevel
install.packages("reshape2")
library(dplyr)
install.packages("dplyr")
library(swirl)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mudf)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
q()
library(swirl)
swirl()
5:20
select(cran,r_arch:country)
select(cran,)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2")
filter(cran,r_verion<="3.0.2",country=='in')
filter(cran,r_version<="3.0.2",country=='in')
filter(cran,r_version<="3.0.2",country=='IN')
filter(cran,country=='US'|country=="IN")
filter(cran,size>100500|r_os=="linux-gnu")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id:size)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_gb=size_mb/2^20)
cran3
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=(size<1000))
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package<-group_by(cran)
by_package<-group_by(cran,package)
by_package
summarise(by_package,mean(size))
source('C:/Users/lixx3527/AppData/Local/Temp/RtmpsX5v3Y/summarize1.R', echo=TRUE)
submit()
pack_sum
quantile(pack_sum$count,probs=0,99)
quantile(pack_sum$count,probs=0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs = 0.99)
top_unique<-filter(pack_sum,unique>465)
view(top_unique)
View(top_unique)
top_unique_sorted<-arrange(pack_sum,desc(unique))
top_unique_sorted<-arrange(top_unique,desc(unique))
view(top_counts_sorted)
View(top_counts_sorted)
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
source('C:/Users/lixx3527/AppData/Local/Temp/RtmpsX5v3Y/chain1.R', echo=TRUE)
submit()
submit()
source('C:/Users/lixx3527/AppData/Local/Temp/RtmpsX5v3Y/chain2.R', echo=TRUE)
submit()
source('C:/Users/lixx3527/AppData/Local/Temp/RtmpsX5v3Y/chain2.R', echo=TRUE)
submit()
source('C:/Users/lixx3527/AppData/Local/Temp/RtmpsX5v3Y/chain3.R', echo=TRUE)
submit()
submit()
source('C:/Users/lixx3527/AppData/Local/Temp/RtmpsX5v3Y/chain3.R', echo=TRUE)
submit()
submit()
source('C:/Users/lixx3527/AppData/Local/Temp/RtmpsX5v3Y/chain4.R', echo=TRUE)
submit()
library('swirl')
swirl()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
q
quit()
library(swirl)
swirl()
?read.csv
mydf<-read.csv(path2csv)
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran, r_arch:country)
select(cran, country:r_rach)
select(cran, country:r_arch)
cran
select(cran,-time)
numeric(100)
?numeric
install.packages("R.matlab")
library(R.matlab)
getwd()
library(R.matlab)
getwd()
setwd("C:/Users/lixx3527/machinelearning/clustering")
data<-readMat("mnist_all.mat")
head(data,n=3)
len(data)
nrow(data)
class(data)
?head
nrow(data)
head(data,n=1)
data[,0]
data1<-readMat("mnist_all.mat")
data1[0]
colnames(data1)
dim(data1)
data1
data1[,c(1,2)]
data1[,3]
data1[2]
data1[0]
data1[1]
data1[1][;1]
data1[1][:1]
data1[1][,1]
class(data[1])
acoustic<-readMat("XRMBsJW11.mat")
head(acoustic,n=3)
dim(acoustic)
rownames(acoustic)
colnames(acoustic)
class(acoustic)
acoustic
acoustic[1,]
data("iris")
head(iris,3)
log.ir<-log(iris[,1:4])
log.ir
ir.species<-iris[,5]
